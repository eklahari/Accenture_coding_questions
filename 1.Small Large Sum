"""1. Small Large Sum
Write a function SmallLargeSum(array) which accepts the array as an argument or parameter, that performs the addition of the second largest element from the even location with the second largest element from an odd location?
Rules:
All the array elements are unique.
If the length of the array is 3 or less than 3, then return 0. If Array is empty then return zero.
Sample Test Case 1:
Input:
6 321754 Output:
7
Explanation: The second largest element in the even locations (3, 1, 5) is 3. The second largest element in the odd locations (2, 7, 4) is 4. So the addition of 3 and 4is7.Sotheansweris7.
Sample Test Case 2: Input:
7
4079642 Output:
10"""


#optimised O(n) approach:
l=[4,0,7,9,6,4,2]
even_second=0
even_first=l[0]
odd_first=l[1]
odd_second=0
if len(l)<=3:
    print(0)
else:
    for i in range(len(l)):
        if i%2==0:
            if l[i]>even_first:
                even_second=even_first
                even_first=l[i]
            if(l[i]>even_second and l[i]<even_first):
                even_second=l[i]
        else:
            if l[i]>odd_first:
                odd_second=odd_first
                odd_first=l[i]
            if(l[i]>odd_second and l[i]<odd_first):
                odd_second=l[i]
    print(even_second+odd_second)

-------------------------------------------------------------
import math
n=int(input())
arr=list(map(int,input().split(" ")))
print(arr)
el=[p for index,p in enumerate(arr) if index%2==0 ]
ol=[p for index,p in enumerate(arr) if index%2!=0]
el=list(set(el))
ol=list(set(ol))
el.sort()
ol.sort()
print(el,ol)
if(len(el)>1 and len(ol)>1):
    val=el[-2]+ol[-2]
    print(val)
else:
    print(0)

