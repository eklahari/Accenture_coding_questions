#find equilibrium index where sum of left side elements is eual to right side elements
"""
input:7
-7 1 5 2 -4 3 0
output:
3
(sum(-7+1+5)==sum(-4+3+0))
index of 2 is 3
"""
//--------python-------------//
n=int(input())#enter arr size
arr=list(map(int,input().split(" ")))
flag=0
for i in range(0,n):
    #print(arr[:i],"-",arr[i+1:])
    #print(sum(arr[:i]),"----",sum(arr[i+1:]))
    if(sum(arr[:i])==sum(arr[i+1:])):
        print(i)
        flag=1
        break
if(flag==0):
    print("-1")

//----------java--------------//
import java.util.*;

public class Main
{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        while(t-->0)
        {   
            int n=sc.nextInt();
            int arr[]=new int[105];
            int ans=-1;
            for(int i=0;i<n;i++)
            {
               arr[sc.nextInt()]++;
            }
            int prefix[]=new int[n];
            prefix[0]=arr[0];
            for(int i=1;i<n;i++)
            {
                prefix[i]=prefix[i-1]+arr[i];
            }
            
            for(int i=0;i<n;i++)
            {
                int left_sum=i>0?prefix[i-1]:0;
                int right_sum=prefix[n-1]-prefix[i];
                if(left_sum==right_sum)
                {
                    ans=i;
                    break;
                }
                
            }
            System.out.print(ans);
            
        }
        
    }
}
    
